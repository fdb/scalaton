<?xml version="1.0" encoding="UTF-8"?>
<project name="Scalaton" default="run">
    <property file="version.properties"/>
    <fail unless="app.name" message="File version.properties should specify app.name."/>
    <fail unless="app.version" message="File version.properties should specify app.version."/>
    <property name="build.dir" location="build"/>
    <property name="build.prod.dir" location="${build.dir}/prod"/>
    <property name="build.test.dir" location="${build.dir}/test"/>
    <property name="dist.dir" location="dist"/>
    <property name="lib.dir" location="lib"/>
    <property name="src.dir" location="src"/>
    <property name="test.dir" location="test"/>
    <path id="run.classpath">
        <fileset dir="${lib.dir}">
            <include name="*.jar"/>
        </fileset>
    </path>
    <path id="compile.classpath">
        <path refid="run.classpath"/>
        <file file="${lib.dir}/compile/scala-compiler.jar"/>
    </path>

    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <file file="${lib.dir}/test/scalatest.jar"/>
    </path>
    <property name="dist.mac" value="${dist.dir}/${app.name}"/>
    <property name="dist.mac.app" value="${dist.mac}/${app.name}.app"/>
    <property name="apple.appstub"
              location="/System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="init">
        <mkdir dir="${build.prod.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <!-- Scala compiler -->
        <taskdef resource="scala/tools/ant/antlib.xml">
            <classpath refid="compile.classpath"/>
        </taskdef>
    </target>

    <target name="compile" depends="init">
        <scalac srcdir="${src.dir}"
                destdir="${build.prod.dir}"
                classpathref="compile.classpath">
            <include name="**/*.scala"/>
        </scalac>
    </target>

    <target name="jar" depends="compile">
        <jar jarfile="${dist.dir}/app.jar" basedir="${build.prod.dir}"/>
    </target>

    <target name="run" depends="jar">
        <java classname="${app.mainClass}" fork="true">
            <classpath refid="run.classpath"/>
            <classpath path="${dist.dir}/app.jar"/>
        </java>
    </target>
    
    <target name="test" depends="compile">
        <mkdir dir="${build.test.dir}"/>
        <scalac srcdir="${test.dir}" destdir="${build.test.dir}" classpathref="test.classpath">
            <include name="**/*.scala"/>
        </scalac>
        <taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestAntTask">
            <classpath refid="test.classpath"/>
        </taskdef>
        <scalatest runpath="${build.test.dir}"/>
    </target>

    <target name="dist-mac" depends="jar">
        <mkdir dir="${dist.mac}"/>
        <mkdir dir="${dist.mac.app}/Contents/MacOS"/>
        <mkdir dir="${dist.mac.app}/Contents/Resources/Java"/>
        <!-- Copy library and program archives-->
        <copy todir="${dist.mac.app}/Contents/Resources/Java">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${dist.dir}">
                <include name="*.jar"/>
            </fileset>
        </copy>
        <!-- Copy application stub -->
        <copy file="${apple.appstub}" toFile="${dist.mac.app}/Contents/MacOS/${app.name}"/>
        <!-- fix stub permissions -->
        <chmod file="${dist.mac.app}/Contents/MacOS/${app.name}" perm="755"/>
        <!-- Copy Info.plist -->
        <copy file="res/Info.plist" todir="${dist.mac.app}/Contents"/>
        <!-- Copy Application icon -->
        <copy file="res/${app.name}.icns" todir="${dist.mac.app}/Contents/Resources"/>
        <!-- Replace version number -->
        <replace file="${dist.mac.app}/Contents/Info.plist" token="@@APP_VERSION@@" value="${app.version}"/>
        <replace file="${dist.mac.app}/Contents/Info.plist" token="@@APP_NAME@@" value="${app.name}"/>
        <replace file="${dist.mac.app}/Contents/Info.plist" token="@@APP_MAIN_CLASS@@" value="${app.mainClass}"/>
        <!-- Copy version number -->
        <copy file="version.properties" todir="${dist.mac.app}/Contents/Resources"/>
        <!-- Make directory into a bundle -->
        <exec executable="/Developer/Tools/SetFile">
            <arg line="-a B ${dist.mac.app}"/>
        </exec>
        <!-- Bundle into DMG -->
        <exec executable="hdiutil">
            <arg line="create -srcfolder ${dist.mac} -format UDBZ ${dist.dir}/${app.name}-${app.version}.dmg"/>
        </exec>
        <!-- Internet-enable DMG -->
        <exec executable="hdiutil">
            <arg line="internet-enable ${dist.dir}/${app.name}-${app.version}.dmg"/>
        </exec>
    </target>

</project>